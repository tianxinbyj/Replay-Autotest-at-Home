# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: carId.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='carId.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0b\x63\x61rId.proto\"C\n\x08Hardware\x12\r\n\x05model\x18\x01 \x01(\t\x12\x0b\n\x03key\x18\x02 \x01(\t\x12\x1b\n\x04type\x18\x03 \x01(\x0e\x32\r.HardwareType\"9\n\tCarConfig\x12\x0e\n\x06\x63\x61r_id\x18\x01 \x01(\t\x12\x1c\n\thardwares\x18\x02 \x03(\x0b\x32\t.Hardware*\x88\x01\n\x0cHardwareType\x12\x14\n\x10HARDWARE_UNKNOWN\x10\x00\x12\x13\n\x0fHARDWARE_CAMERA\x10\x01\x12\x11\n\rHARDWARE_GNSS\x10\x02\x12\x10\n\x0cHARDWARE_OMC\x10\x03\x12\x12\n\x0eHARDWARE_RADAR\x10\x04\x12\x14\n\x10HARDWARE_VEHICLE\x10\x05\x62\x06proto3')
)

_HARDWARETYPE = _descriptor.EnumDescriptor(
  name='HardwareType',
  full_name='HardwareType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HARDWARE_UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HARDWARE_CAMERA', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HARDWARE_GNSS', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HARDWARE_OMC', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HARDWARE_RADAR', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HARDWARE_VEHICLE', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=144,
  serialized_end=280,
)
_sym_db.RegisterEnumDescriptor(_HARDWARETYPE)

HardwareType = enum_type_wrapper.EnumTypeWrapper(_HARDWARETYPE)
HARDWARE_UNKNOWN = 0
HARDWARE_CAMERA = 1
HARDWARE_GNSS = 2
HARDWARE_OMC = 3
HARDWARE_RADAR = 4
HARDWARE_VEHICLE = 5



_HARDWARE = _descriptor.Descriptor(
  name='Hardware',
  full_name='Hardware',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='model', full_name='Hardware.model', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='key', full_name='Hardware.key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='Hardware.type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15,
  serialized_end=82,
)


_CARCONFIG = _descriptor.Descriptor(
  name='CarConfig',
  full_name='CarConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='car_id', full_name='CarConfig.car_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hardwares', full_name='CarConfig.hardwares', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=84,
  serialized_end=141,
)

_HARDWARE.fields_by_name['type'].enum_type = _HARDWARETYPE
_CARCONFIG.fields_by_name['hardwares'].message_type = _HARDWARE
DESCRIPTOR.message_types_by_name['Hardware'] = _HARDWARE
DESCRIPTOR.message_types_by_name['CarConfig'] = _CARCONFIG
DESCRIPTOR.enum_types_by_name['HardwareType'] = _HARDWARETYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Hardware = _reflection.GeneratedProtocolMessageType('Hardware', (_message.Message,), dict(
  DESCRIPTOR = _HARDWARE,
  __module__ = 'carId_pb2'
  # @@protoc_insertion_point(class_scope:Hardware)
  ))
_sym_db.RegisterMessage(Hardware)

CarConfig = _reflection.GeneratedProtocolMessageType('CarConfig', (_message.Message,), dict(
  DESCRIPTOR = _CARCONFIG,
  __module__ = 'carId_pb2'
  # @@protoc_insertion_point(class_scope:CarConfig)
  ))
_sym_db.RegisterMessage(CarConfig)


# @@protoc_insertion_point(module_scope)
